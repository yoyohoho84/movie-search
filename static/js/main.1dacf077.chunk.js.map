{"version":3,"sources":["components/Header.js","components/SearchInput.js","items/FilmItem.js","components/FilmsList.js","components/TagsList.js","helpers/api-manager.js","pages/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["Header","activeButton","setActiveButton","ColorButton","withStyles","theme","root","margin","width","color","backgroundColor","boxShadow","Button","className","Grid","container","spacing","align","item","xs","sm","style","textDecoration","onClick","btnMovie","btnBookmarks","console","log","variant","useStyles","makeStyles","display","flexDirection","alignItems","justifyContent","form","input","SearchInput","updFilms","setSearchResult","bookmarks","setUpdFilms","searchResults","setInput","setActiveButtonTags","classes","useEffect","results","filter","title","toLowerCase","includes","noValidate","autoComplete","TextField","id","label","value","onChange","e","target","FilmItem","pickDeleteBookmarks","added","ListItem","button","ListItemText","primary","ListItemIcon","maxWidth","palette","background","paper","FilmsList","renderFilms","map","index","key","renderSearchFilms","renderBookmarks","List","component","aria-label","length","fontSize","height","TagsList","tagsFilter","activeButtonTags","tags","APIManager","methodName","params","fetch","baseURL","method","credentials","headers","body","JSON","stringify","response","json","callMethod","HomePage","useState","films","setBookmarks","getLocalStorageFilms","localStorage","getItem","resStorageFilms","parse","_tags","findTags","undefined","find","itemTags","findIndexTags","findIndex","splice","findIdBookmarks","findIndexBookmarks","setItem","App","basename","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1dacf077.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles, withStyles, Button, Grid } from \"@material-ui/core/\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { green, purple } from \"@material-ui/core/colors\";\r\n// import \"../styles/header.sass\";\r\n\r\nconst Header = ({ activeButton, setActiveButton }) => {\r\n\r\n  const ColorButton = withStyles((theme) => ({\r\n    root: {\r\n      margin: \"10px 0px 10px 0px\",\r\n      width: \"160px\",\r\n      color: \"#fff\",\r\n      backgroundColor: \"#db7093\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"#db7093\",\r\n      },\r\n      \"&:focus\": {\r\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.5)\",\r\n      },\r\n    },\r\n  }))(Button);\r\n\r\n  function goMovie() {\r\n    setActiveButton({ ...activeButton, btnMovie: true, btnBookmarks: false });\r\n    console.log(\"goMovie active:\", activeButton);\r\n  }\r\n\r\n  function goBookmarks() {\r\n    setActiveButton({ ...activeButton, btnMovie: false, btnBookmarks: true });\r\n    console.log(\"goBookmarks activeButton:\", activeButton);\r\n  }\r\n\r\n  return (\r\n    <div className=\"headerRoot\">\r\n      <Grid container spacing={1} align=\"center\" >\r\n        <Grid item xs={12} sm={6} align=\"center\">\r\n          <Link\r\n            style={{\r\n              textDecoration: \"none\",\r\n            }}\r\n            onClick={goMovie}\r\n            // to=\"/movie\"\r\n          >\r\n            <ColorButton\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{\r\n                backgroundColor: activeButton.btnMovie ? \"#db7093\" : \"gray\",\r\n              }}\r\n            >\r\n              Фильмы\r\n            </ColorButton>\r\n          </Link>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} align=\"center\">\r\n          <Link\r\n            style={{\r\n              textDecoration: \"none\",\r\n            }}\r\n            onClick={goBookmarks}\r\n            // to=\"/bookmarks\"\r\n          >\r\n            <ColorButton\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{\r\n                backgroundColor: activeButton.btnBookmarks ? \"#db7093\" : \"gray\",\r\n              }}\r\n            >\r\n              Закладки\r\n            </ColorButton>\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport { Header };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles, TextField, Button, Grid } from \"@material-ui/core/\";\r\nimport { Link } from \"react-router-dom\";\r\nimport films from \"../data/films\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: \"20px 0px 0px 0px\",\r\n  },\r\n  form: {\r\n    width: \"400px\",\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchInput = ({\r\n  updFilms,\r\n  bookmarks,\r\n  setUpdFilms,\r\n  searchResults,\r\n  setSearchResult,\r\n  input,\r\n  setInput,\r\n  setActiveButtonTags\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    const results = updFilms.filter((item) =>\r\n      item.title.toLowerCase().includes(input)\r\n    );\r\n    setSearchResult(results);\r\n    setActiveButtonTags([]);\r\n  }, [input]);\r\n\r\n  const handleInputChange = (e) => {\r\n    setInput(e.target.value.toLowerCase());\r\n\r\n    console.log(\"SearchInput input\", input);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <form className={classes.form} noValidate autoComplete=\"off\">\r\n        <TextField\r\n          className={classes.input}\r\n          id=\"outlined-basic\"\r\n          label=\"Поиск\"\r\n          variant=\"outlined\"\r\n          value={input}\r\n          onChange={handleInputChange}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport { SearchInput };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Grid,\r\n} from \"@material-ui/core/\";\r\nimport { Link } from \"react-router-dom\";\r\nimport StarIcon from \"@material-ui/icons/Star\";\r\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\r\n\r\nconst FilmItem = ({ id, title, pickDeleteBookmarks, bookmarks, added }) => {\r\n  // const [added, setAdded] = useState(false);\r\n  \r\n  return (\r\n    <ListItem id={id} button>\r\n      <ListItemText primary={`${title}`} />\r\n      <ListItemIcon onClick={() => {\r\n        pickDeleteBookmarks(title, id)\r\n        \r\n      }}>\r\n        {added ? <StarIcon style={{ color: \"#db7093\" }}/> : <StarBorderIcon />}\r\n      </ListItemIcon>\r\n    </ListItem>\r\n  );\r\n};\r\nexport { FilmItem };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  withStyles,\r\n  Button,\r\n} from \"@material-ui/core/\";\r\nimport StarIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FilmItem } from \"../items\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"150%\",\r\n    maxWidth: 460,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst FilmsList = ({\r\n  activeButton,\r\n  updFilms,\r\n  bookmarks,\r\n  pickDeleteBookmarks,\r\n  searchResults,\r\n  setSearchResult,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const ColorButton = withStyles((theme) => ({\r\n    root: {\r\n      margin: \"5px 0px 20px 0px\",\r\n      width: \"160px\",\r\n      color: \"#fff\",\r\n      backgroundColor: \"#db7093\",\r\n      \"&:hover\": {\r\n        backgroundColor: \"#db7093\",\r\n      },\r\n      \"&:focus\": {\r\n        boxShadow: \"0 0 0 0.2rem rgba(0,123,255,.5)\",\r\n      },\r\n    },\r\n  }))(Button);\r\n\r\n  const renderFilms = updFilms.map((item, index) => {\r\n    return (\r\n      <FilmItem\r\n        id={index + 1}\r\n        key={index}\r\n        title={item.title}\r\n        // test={item.tags}\r\n        added={item.added}\r\n        pickDeleteBookmarks={pickDeleteBookmarks}\r\n        bookmarks={bookmarks}\r\n      />\r\n    );\r\n  });\r\n\r\n  const renderSearchFilms = searchResults.map((item, index) => {\r\n    return (\r\n      <FilmItem\r\n        id={index + 1}\r\n        key={index}\r\n        title={item.title}\r\n        // test={item.tags}\r\n        added={item.added}\r\n        pickDeleteBookmarks={pickDeleteBookmarks}\r\n        bookmarks={bookmarks}\r\n      />\r\n    );\r\n  });\r\n\r\n  const renderBookmarks = bookmarks.map((item, index) => {\r\n    return (\r\n      <FilmItem\r\n        id={index + 1}\r\n        key={index}\r\n        title={item.title}\r\n        // tags={item.tags}\r\n        added={item.added}\r\n        pickDeleteBookmarks={pickDeleteBookmarks}\r\n        bookmarks={bookmarks}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {activeButton.btnMovie ? (\r\n        <>\r\n          <List component=\"nav\" className={classes.root} aria-label=\"contacts\">\r\n            {renderSearchFilms ? renderSearchFilms : renderFilms}\r\n          </List>\r\n          {renderFilms.length > 0 ? (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n              }}\r\n            >\r\n              <ColorButton variant=\"contained\" color=\"primary\">\r\n                Показать еще\r\n              </ColorButton>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <List component=\"nav\" className={classes.root} aria-label=\"contacts\">\r\n            {renderBookmarks}\r\n          </List>\r\n          {renderBookmarks.length > 0 ? (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n              }}\r\n            >\r\n              <ColorButton variant=\"contained\" color=\"primary\">\r\n                Показать еще\r\n              </ColorButton>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport { FilmsList };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles, TextField, Button, Grid, List } from \"@material-ui/core/\";\r\nimport { Link } from \"react-router-dom\";\r\nimport tags from \"../data/tags\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    margin: \"5px 0px 0px 0px\",\r\n    width: \"400px\",\r\n    // height: \"50%\",\r\n  },\r\n  form: {\r\n    width: \"400px\",\r\n  },\r\n  button: {\r\n    color: \"white\",\r\n    backgroundColor: \"gray\",\r\n    fontSize: \"9px\",\r\n    width: \"85px\",\r\n    height: \"25px\",\r\n  },\r\n}));\r\n\r\nconst TagsList = ({ tagsFilter, activeButtonTags, setActiveButtonTags }) => {\r\n  const classes = useStyles();\r\n  let arrTags = [];\r\n  // function onButtonTags(_tags, index) {\r\n  //   if (activeButtonTags.includes(_tags)) {\r\n  //     activeButtonTags.splice(index, 1);\r\n  //     setActiveButtonTags(activeButtonTags);\r\n  //   } else {\r\n  //     setActiveButtonTags([...activeButtonTags, _tags]);\r\n  //     console.log(\"activeButtonTags\", activeButtonTags);\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <List component=\"nav\" className={classes.root} aria-label=\"contacts\">\r\n        {tags.map((item, index) => {\r\n          if (index < 4) {\r\n            return (\r\n              <Button\r\n                key={index}\r\n                onClick={() => {\r\n                  // setActiveButtonTags([...activeButtonTags, item]);\r\n                  tagsFilter(item, index);\r\n                }}\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                style={{\r\n                  backgroundColor: activeButtonTags.includes(item)\r\n                    ? \"#db7093\"\r\n                    : \"gray\",\r\n                }}\r\n              >\r\n                {item}\r\n              </Button>\r\n            );\r\n          }\r\n        })}\r\n      </List>\r\n      <List component=\"nav\" className={classes.root} aria-label=\"contacts\">\r\n        {tags.map((item, index) => {\r\n          if (index > 3 && index < 8) {\r\n            return (\r\n              <Button\r\n                key={index}\r\n                onClick={() => {\r\n                  tagsFilter(item, index);\r\n                }}\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                style={{\r\n                  backgroundColor: activeButtonTags.includes(item)\r\n                    ? \"#db7093\"\r\n                    : \"gray\",\r\n                }}\r\n              >\r\n                {item}\r\n              </Button>\r\n            );\r\n          }\r\n        })}\r\n      </List>\r\n      <List component=\"nav\" className={classes.root} aria-label=\"contacts\">\r\n        {tags.map((item, index) => {\r\n          if (index > 7 && index < 12) {\r\n            return (\r\n              <Button\r\n                key={index}\r\n                onClick={() => {\r\n                  tagsFilter(item, index);\r\n                }}\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                style={{\r\n                  backgroundColor: activeButtonTags.includes(item)\r\n                    ? \"#db7093\"\r\n                    : \"gray\",\r\n                }}\r\n              >\r\n                {item}\r\n              </Button>\r\n            );\r\n          }\r\n        })}\r\n      </List>\r\n    </>\r\n  );\r\n};\r\nexport { TagsList };\r\n","/**\r\n * Класс для работы с API\r\n */\r\nexport class APIManager {\r\n    static baseURL = 'https://4fb558da2428.ngrok.io/rest-api';\r\n\r\n    /**\r\n     * @param {string} methodName - Имя метода\r\n     * @param {object} params - Параметры метода\r\n     * @returns {Promise<any>} \r\n     */\r\n    static async callMethod(methodName, params = {}) {\r\n        const response = await fetch(`${APIManager.baseURL}/${methodName}`, {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(params)\r\n        });\r\n\r\n        return response.json();\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles, Box, Button } from \"@material-ui/core/\";\r\nimport {\r\n  MenuApp,\r\n  Table,\r\n  Header,\r\n  SearchInput,\r\n  FilmsList,\r\n  TagsList,\r\n} from \"../components\";\r\nimport films from \"../data/films\";\r\nimport tags from \"../data/tags\";\r\n\r\nimport { APIManager } from \"../helpers\";\r\n\r\nconst { callMethod } = APIManager;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"600px\",\r\n  },\r\n}));\r\n\r\nconst HomePage = ({}) => {\r\n  const classes = useStyles();\r\n  const [activeButton, setActiveButton] = useState({\r\n    btnMovie: true,\r\n    btnBookmarks: false,\r\n  });\r\n  const [updFilms, setUpdFilms] = useState(films);\r\n  const [bookmarks, setBookmarks] = useState([]);\r\n  const [searchResults, setSearchResult] = useState(updFilms);\r\n  const [input, setInput] = useState(\"\");\r\n  const [activeButtonTags, setActiveButtonTags] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getLocalStorageFilms = localStorage.getItem(\"films\");\r\n    const resStorageFilms = JSON.parse(getLocalStorageFilms);\r\n\r\n    if (resStorageFilms) {\r\n      setSearchResult(resStorageFilms);\r\n      setUpdFilms(resStorageFilms);\r\n      setBookmarks(\r\n        resStorageFilms.filter((item) => {\r\n          if (item.added) {\r\n            return item;\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  const pickDeleteBookmarks = (title, id) => {\r\n    const findIdBookmarks = bookmarks.find(\r\n      (item, index) => item.title === title\r\n    );\r\n\r\n    const findIndexBookmarks = bookmarks.findIndex(\r\n      (item, index) => item.title === title\r\n    );\r\n\r\n    if (!bookmarks || findIdBookmarks === undefined) {\r\n      setUpdFilms(\r\n        updFilms.map((item) => {\r\n          if (item.title === title) {\r\n            item.added = true;\r\n          }\r\n          return item;\r\n        })\r\n      );\r\n      setBookmarks([...bookmarks, { ...updFilms[id - 1], added: true }]);\r\n    } else {\r\n      setUpdFilms(\r\n        updFilms.map((item) => {\r\n          if (item.title === title) {\r\n            item.added = false;\r\n          }\r\n          return item;\r\n        })\r\n      );\r\n      bookmarks.splice(findIndexBookmarks, 1);\r\n      setBookmarks(bookmarks);\r\n    }\r\n    localStorage.setItem(\"films\", JSON.stringify(updFilms));\r\n  };\r\n\r\n  function tagsFilter(_tags, index) {\r\n    console.log(\"tagsFilter arr:\", _tags);\r\n\r\n    const findTags = searchResults.filter((item) => {\r\n      const f = item.tags.find((itemTags) => _tags.includes(itemTags));\r\n      if (f !== undefined) {\r\n        return item;\r\n      }\r\n    });\r\n\r\n    const findIndexTags = activeButtonTags.findIndex(\r\n      (item, index) => item === _tags\r\n    );\r\n\r\n    if (findIndexTags === -1) {\r\n      setSearchResult(findTags);\r\n      console.log(\"tagsFilter:\", findTags);\r\n      setActiveButtonTags([...activeButtonTags, _tags]);\r\n      console.log(\"tagsFilter activeButtonTags:\", activeButtonTags);\r\n    } else {\r\n      setSearchResult(updFilms);\r\n      activeButtonTags.splice(findIndexTags, 1);\r\n      setActiveButtonTags(activeButtonTags);\r\n      console.log(\"tagsFilter delete:\", updFilms);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"homePageRoot\">\r\n      <Header activeButton={activeButton} setActiveButton={setActiveButton} />\r\n      {activeButton.btnMovie ? (\r\n        <>\r\n          <SearchInput\r\n            updFilms={updFilms}\r\n            setUpdFilms={setUpdFilms}\r\n            bookmarks={bookmarks}\r\n            searchResults={searchResults}\r\n            setSearchResult={setSearchResult}\r\n            input={input}\r\n            setInput={setInput}\r\n            setActiveButtonTags={setActiveButtonTags}\r\n          />\r\n          <TagsList\r\n            tagsFilter={tagsFilter}\r\n            activeButtonTags={activeButtonTags}\r\n            setActiveButtonTags={setActiveButtonTags}\r\n          />\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <FilmsList\r\n        activeButton={activeButton}\r\n        setActiveButton={setActiveButton}\r\n        updFilms={updFilms}\r\n        bookmarks={bookmarks}\r\n        pickDeleteBookmarks={pickDeleteBookmarks}\r\n        searchResults={searchResults}\r\n        setSearchResult={setSearchResult}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport { HomePage };\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { HomePage, SignInPage, SignUpPage, ProfilePage } from \"./pages\";\nimport \"./styles/header.sass\";\nimport \"./styles/homePage.sass\";\n\nfunction App() {\n\n  const [userId, setUserId] = useState(null);\n\n  return (\n    <BrowserRouter basename=\"/\">\n      <Switch>\n        <Route\n          path=\"/\"\n          component={HomePage}\n          exact\n        />\n        {/* <Route\n          path=\"/movie\"\n          component={() => <MoviePage />}\n          exact\n        />\n        <Route\n          path=\"/bookmarks\"\n          component={() => (\n            <BookmarksPage userId={userId} setUserId={setUserId} />\n          )}\n          exact\n        /> */}\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}